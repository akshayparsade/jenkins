pipeline {
    agent any

    stages {

        stage('Pull') {
            steps {
                // Clone the repo into the Jenkins workspace
                git branch: 'master', url: 'https://github.com/akshayparsade/studentapp-ui.git'
            }
        }

        stage('Build') {
            steps {
                // Clean target folder in workspace
                sh 'rm -rf target'

                // Run Maven build
                sh '/opt/maven/bin/mvn clean package'
            }
        }

       stage('Test') {
            steps {
                withSonarQubeEnv(installationName: 'sonar', credentialsId: 'sonar-token') {
                    sh '/opt/maven/bin/mvn sonar:sonar -Dsonar.projectKey=studentapp4'
                }           
            }
        }

        stage('QualityGate') {
            steps {
                // Wait for SonarQube QualityGate result
                timeout(time: 5, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true, credentialsId: 'sonar-token'
                }
            }
        }

        stage('Deploy') {
            steps {
                // Placeholder for deployment steps
            deploy adapters: [tomcat9(alternativeDeploymentContext: '', credentialsId: 'tomcat', path: '', url: 'http://172.31.17.28:9090')], contextPath: '/', war: '**/*.war'            }
        }

        stage('Delivery') {
            steps {

              cp studentapp-SNAPSHOT s3-studentapp-bux
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished.'
        }
        failure {
            echo 'Pipeline failed.'
        }
        success {
            echo 'Pipeline succeeded!'
        }
    }
}
