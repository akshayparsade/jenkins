pipeline {
    agent any

    stages {

        stage('Pull') {
            steps {
                // Clone the repo into the Jenkins workspace
                git branch: 'master', url: 'https://github.com/akshayparsade/studentapp-ui.git'
            }
        }

        stage('Build') {
            steps {
                // Clean target folder in workspace
                sh 'rm -rf target'

                // Run Maven build
                sh '/opt/maven/bin/mvn clean package'
            }
        }

        stage('Test / SonarQube Analysis') {
    steps {
        withSonarQubeEnv('sonar') {
            withCredentials([string(credentialsId: 'sonar-token', variable: 'SONAR_TOKEN')]) {
                sh '''
                    /opt/maven/bin/mvn sonar:sonar \
                      -Dsonar.projectKey=studentapp4 \
                      -Dsonar.login=$SONAR_TOKEN
                '''
            }
        }
    }
}

        stage('QualityGate') {
            steps {
                // Wait for SonarQube QualityGate result
                timeout(time: 5, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true, credentialsId: 'sonar-token'
                }
            }
        }

        stage('Deploy') {
            steps {
                // Placeholder for deployment steps
                echo 'Deploy code successfully'
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished.'
        }
        failure {
            echo 'Pipeline failed.'
        }
        success {
            echo 'Pipeline succeeded!'
        }
    }
}
